import { createSlice } from "@reduxjs/toolkit";

const initialState = {
    teachersList: [],
    teacherDetails: [],
    loading: false,
    error: null,
    response: null,
};

// Create a slice for managing teacher-related state
const teacherSlice = createSlice({
    name: 'teacher',
    initialState,
    reducers: {
        // Reducer to handle the start of a request 
        getRequest: (state) => {
            state.loading = true;
        },
        // Reducer to handle a successful request for teacher details 
        doneSuccess: (state, action) => {
            state.teacherDetails = action.payload;
            state.loading = false;
            state.error = null;
            state.response = null;
        },
        // Reducer to handle a successful request for teachers 
        getSuccess: (state, action) => {
            state.teachersList = action.payload;
            state.loading = false;
            state.error = null;
            state.response = null;
        },
        // Reducer to handle a request that failed with a message 
        getFailed: (state, action) => {
            state.response = action.payload;
            state.loading = false;
            state.error = null;
        },
        // Reducer to handle a request that resulted in an error 
        getError: (state, action) => {
            state.loading = false;
            state.error = action.payload;
        },
        // Reducer to handle a successful update or removal 
        postDone: (state) => {
            // Reset loading, error, and response states 
            state.loading = false;
            state.error = null;
            state.response = null;
        }
    },
});

// Export the action creators generated by createSlice 
export const {
    getRequest,
    getSuccess,
    getFailed,
    getError,
    doneSuccess,
    postDone
} = teacherSlice.actions;

// Export the reducer function generated by createSlice 
export const teacherReducer = teacherSlice.reducer;
