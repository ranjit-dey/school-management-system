import { createSlice } from "@reduxjs/toolkit";

// Define the initial state for the student slice
const initialState = {
    studentsList: [],
    loading: false,
    error: null,
    response: null,
    statestatus: "idle",
};

// Create a slice for managing student-related state
const studentSlice = createSlice({
  name: "student",
  initialState,
  reducers: {
    // Reducer to handle the start of a request
    getRequest: (state) => {
      state.loading = true;
    },

    // Reducer to handle a successful update or removal
    stuffDone: (state) => {
      state.loading = false;
      state.error = null;
      state.response = null;
      state.statestatus = "added";
    },

    // Reducer to handle a successful request for students
    getSuccess: (state, action) => {
      state.studentsList = action.payload;
      state.loading = false;
      state.error = null;
      state.response = null;
    },

    // Reducer to handle a request that failed with a message
    getFailed: (state, action) => {
      state.response = action.payload;
      state.loading = false;
      state.error = null;
    },

    // Reducer to handle a request that resulted in an error
    getError: (state, action) => {
      state.loading = false;
      state.error = action.payload;
    },

    // Reducer to reset the student state to idle
    underStudentControl: (state) => {
      state.loading = false;
      state.response = null;
      state.error = null;
      state.statestatus = "idle";
    },
  },
});

// Export the action creators generated by createSlice
export const {
  getRequest,
  getSuccess,
  getFailed,
  getError,
  underStudentControl,
  stuffDone,
} = studentSlice.actions;

// Export the reducer function generated by createSlice
export const studentReducer = studentSlice.reducer;
